# Generated by Django 4.0 on 2024-07-26 08:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SignedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('category', models.CharField(default='newuser', max_length=10)),
                ('signed_date', models.DateField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-signed_date'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ccustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('c_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_connect', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-c_date'],
            },
        ),
        migrations.CreateModel(
            name='CorUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('post_no_or_title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('cor_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_connect', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-cor_date'],
            },
        ),
        migrations.CreateModel(
            name='DelUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('reason', models.CharField(max_length=250)),
                ('message', models.TextField(default='not provided')),
                ('del_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-del_date'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('tags', models.TextField(null=True)),
                ('category', models.CharField(choices=[('Social Psychology', 'Social Psychology'), ('Psychopathology', 'Psychopathology'), ('General Psychology', 'General Psychology'), ('Authors', 'Authors'), ('Statistics', 'Statistics'), ('Research', 'Research')], max_length=100)),
                ('intro', models.CharField(max_length=250)),
                ('content', models.TextField()),
                ('pub_date', models.DateTimeField(verbose_name=django.utils.timezone.now)),
                ('images', models.ImageField(upload_to='static')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.signeduser')),
                ('likes', models.ManyToManyField(blank=True, related_name='like_posts', to=settings.AUTH_USER_MODEL)),
                ('saves', models.ManyToManyField(blank=True, related_name='save_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-pub_date'],
            },
        ),
    ]
